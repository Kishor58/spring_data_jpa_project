1. Spring Boot Data Access (JPA + Hibernate Core)
âœ… What is Spring Data JPA, Hibernate

âœ… Creating Entities with @Entity

âœ… JPA Annotations:
@Id, @GeneratedValue
Relationships: @OneToMany, @ManyToOne, @OneToOne, @ManyToMany

âœ… Creating Repositories:
JpaRepository, CrudRepository

âœ… Query Methods:
Derived Query Methods
@Query with JPQL
Native Queries

âœ… Pagination and Sorting

âœ… Transactions using @Transactional

âœ… Flyway or Liquibase DB Migrations (choose one)

2. Advanced JPA
âœ… Criteria API (for dynamic queries)

âœ… JPQL vs Native Queries (and best practices)

âœ… EntityManager and Manual Queries

âœ… Projections (DTO mapping in queries)

3. Auditing
âœ… Enable auditing with @EnableJpaAuditing

âœ… @CreatedDate, @LastModifiedDate, @CreatedBy, @LastModifiedBy

âœ… AuditorAware implementation

âœ… Test auditing behavior

4. REST API & Controller Layer
âœ… @RestController, @GetMapping, etc.

âœ… @PathVariable, @RequestParam

âœ… Input validation: @Valid, @NotNull, etc.

âœ… ResponseEntity and custom responses

âœ… Global Exception Handling with @ControllerAdvice

5. Design Principles
âœ… SOLID Principles with real Spring Boot examples

âœ… Layered architecture: Controller â†’ Service â†’ Repository â†’ DB

âœ… DTO, Mapper, Utility packages

6. Logging
âœ… Logging with SLF4J and Logback

âœ… Best practices for logging in services/controllers

âœ… Custom log formats and saving logs to files

7. Optional (Nice to have)
ðŸ”„ ModelMapper or MapStruct (for mapping DTO â†” Entity)

ðŸ”’ Spring Security (if time permits)

ðŸ§ª JUnit Testing + Mockito

ðŸ“¦ Remaining JPA Topics for Project Purpose
Entity lifecycle events (@PrePersist, @PreUpdate)

Soft delete using @SQLDelete and @Where

Custom Repository methods

DTO Projections with constructor expressions